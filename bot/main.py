import asyncio
import logging
import aiohttp
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, FSInputFile
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os

API_TOKEN = os.getenv("BOT_TOKEN")
KINOPOISK_API_KEY = os.getenv("KINOPOISK_API_KEY")

bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

SEARCH_URL = "https://api.kinopoisk.dev/v1.4/movie/search"

@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(
        "üéû <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–µ—Ç—Ä–æ-–ö–∏–Ω–æ–ë–æ—Ç!</b>

"
        "–ù–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –∂–∞–Ω—Ä –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Äî –∏ —è –Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∫–∏–Ω–æ üé¨"
    )

@dp.message()
async def search_movie(message: Message):
    query = message.text.strip()
    await message.answer("üîç –ò—â—É –ª–µ–Ω—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>{}</b>...".format(query))

    async with aiohttp.ClientSession() as session:
        headers = {"X-API-KEY": KINOPOISK_API_KEY}
        async with session.get(SEARCH_URL, params={"query": query}, headers=headers) as resp:
            data = await resp.json()

    films = data.get("docs", [])
    if not films:
        await message.answer("ü•Ä –£–≤—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–Ω–∞—á–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å.")
        return

    for film in films[:3]:
        name = film.get("name") or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
        year = film.get("year", "‚Äî")
        genres = ", ".join([g["name"] for g in film.get("genres", [])]) or "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
        description = film.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
        poster = film.get("poster", {}).get("previewUrl")
        kp_id = film.get("id")
        kp_link = f"https://www.kinopoisk.ru/film/{kp_id}/"

        text = f"<b>üé¨ {name} ({year})</b>
"                f"<i>–ñ–∞–Ω—Ä:</i> {genres}

"                f"{description}

"                f"<a href='{kp_link}'>üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫</a>"

        if poster:
            await message.answer_photo(photo=poster, caption=text)
        else:
            await message.answer(text)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(dp.start_polling(bot))
